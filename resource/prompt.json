{
  "prompt": {
    "system": [
      "You are a linguistic expert and you need to write as natural, fluent, diverse and informative sentences as possible for the relation extraction task.",
      "As a linguistic expert, your task for relation extraction necessitates the production of sentences that are not only natural and fluent, but also diverse and informative.",
      "As a linguistic specialist, your objective is to craft sentences that are both natural and fluent, while also striving for diversity and informativeness in the context of relation extraction.",
      "In the realm of relation extraction, your role as a linguistic expert entails producing sentences that are not only natural and fluent, but also exhibit a wide range of diversity and convey informative content.",
      "As a linguistic expert, your goal is to write sentences for the relation extraction task that are as natural, fluent, diverse, and informative as possible."
    ],
    "user": [
      "Write more sentences with different entities but the same relational semantics, and output them in the same format.",
      "Generate additional sentences containing various entities but conveying the same relational semantics, and present them in the identical format.",
      "Produce additional sentences featuring diverse entities while maintaining identical relational semantics, presenting them in the consistent format.",
      "Generate more sentences incorporating diverse entities while upholding identical relational semantics, and present them consistently in the specified format.",
      "Create additional sentences that include various entities while preserving the same relational semantics, and consistently present them in the specified format."
    ]
  },
  "semeval": {
    "Other": "{subj} is not related to {obj}",
    "Component-Whole(e1,e2)": "{subj} is the component of {obj}",
    "Component-Whole(e2,e1)": "{subj} has the component {obj}",
    "Instrument-Agency(e1,e2)": "{subj} is the instrument of {obj}",
    "Instrument-Agency(e2,e1)": "{subj} has the instrument {obj}",
    "Member-Collection(e1,e2)": "{subj} is the member of {obj}",
    "Member-Collection(e2,e1)": "{subj} has the member {obj}",
    "Cause-Effect(e1,e2)": "{subj} has the effect {obj}",
    "Cause-Effect(e2,e1)": "{subj} is the effect of {obj}",
    "Entity-Destination(e1,e2)": "{subj} locates in {obj}",
    "Entity-Destination(e2,e1)": "{subj} is the destination of {obj}",
    "Content-Container(e1,e2)": "{subj} is the content in {obj}",
    "Content-Container(e2,e1)": "{subj} contains {obj}",
    "Message-Topic(e1,e2)": "{subj} is the message on {obj}",
    "Message-Topic(e2,e1)": "{subj} is the topic of {obj}",
    "Product-Producer(e1,e2)": "{subj} is the product of {obj}",
    "Product-Producer(e2,e1)": "{subj} produces {obj}",
    "Entity-Origin(e1,e2)": "{subj} origins from {obj}",
    "Entity-Origin(e2,e1)": "{subj} is the origin of {obj}"
  },
  "tacred": {
    "no_relation": "{subj} has no known relations to {obj}",
    "per:stateorprovince_of_death": "{subj} died in the state or province {obj}",
    "per:title": "{subj} is a {obj}",
    "org:member_of": "{subj} is the member of {obj}",
    "per:other_family": "{subj} is the other family member of {obj}",
    "org:country_of_headquarters": "{subj} has a headquarter in the country {obj}",
    "org:parents": "{subj} has the parent company {obj}",
    "per:stateorprovince_of_birth": "{subj} was born in the state or province {obj}",
    "per:spouse": "{subj} is the spouse of {obj}",
    "per:origin": "{subj} has the nationality {obj}",
    "per:date_of_birth": "{subj} has birthday on {obj}",
    "per:schools_attended": "{subj} studied in {obj}",
    "org:members": "{subj} has the member {obj}",
    "org:founded": "{subj} was founded in {obj}",
    "per:stateorprovinces_of_residence": "{subj} lives in the state or province {obj}",
    "per:date_of_death": "{subj} died in the date {obj}",
    "org:shareholders": "{subj} has shares hold in {obj}",
    "org:website": "{subj} has the website {obj}",
    "org:subsidiaries": "{subj} owns {obj}",
    "per:charges": "{subj} is convicted of {obj}",
    "org:dissolved": "{subj} dissolved in {obj}",
    "org:stateorprovince_of_headquarters": "{subj} has a headquarter in the state or province {obj}",
    "per:country_of_birth": "{subj} was born in the country {obj}",
    "per:siblings": "{subj} is the siblings of {obj}",
    "org:top_members/employees": "{subj} has the high level member {obj}",
    "per:cause_of_death": "{subj} died because of {obj}",
    "per:alternate_names": "{subj} has the alternate name {obj}",
    "org:number_of_employees/members": "{subj} has the number of employees {obj}",
    "per:cities_of_residence": "{subj} lives in the city {obj}",
    "org:city_of_headquarters": "{subj} has a headquarter in the city {obj}",
    "per:children": "{subj} is the parent of {obj}",
    "per:employee_of": "{subj} is the employee of {obj}",
    "org:political/religious_affiliation": "{subj} has political affiliation with {obj}",
    "per:parents": "{subj} has the parent {obj}",
    "per:city_of_birth": "{subj} was born in the city {obj}",
    "per:age": "{subj} has the age {obj}",
    "per:countries_of_residence": "{subj} lives in the country {obj}",
    "org:alternate_names": "{subj} is also known as {obj}",
    "per:religion": "{subj} has the religion {obj}",
    "per:city_of_death": "{subj} died in the city {obj}",
    "per:country_of_death": "{subj} died in the country {obj}",
    "org:founded_by": "{subj} was founded by {obj}"
  },
  "tacrev": {
    "no_relation": "{subj} has no known relations to {obj}",
    "per:stateorprovince_of_death": "{subj} died in the state or province {obj}",
    "per:title": "{subj} is a {obj}",
    "org:member_of": "{subj} is the member of {obj}",
    "per:other_family": "{subj} is the other family member of {obj}",
    "org:country_of_headquarters": "{subj} has a headquarter in the country {obj}",
    "org:parents": "{subj} has the parent company {obj}",
    "per:stateorprovince_of_birth": "{subj} was born in the state or province {obj}",
    "per:spouse": "{subj} is the spouse of {obj}",
    "per:origin": "{subj} has the nationality {obj}",
    "per:date_of_birth": "{subj} has birthday on {obj}",
    "per:schools_attended": "{subj} studied in {obj}",
    "org:members": "{subj} has the member {obj}",
    "org:founded": "{subj} was founded in {obj}",
    "per:stateorprovinces_of_residence": "{subj} lives in the state or province {obj}",
    "per:date_of_death": "{subj} died in the date {obj}",
    "org:shareholders": "{subj} has shares hold in {obj}",
    "org:website": "{subj} has the website {obj}",
    "org:subsidiaries": "{subj} owns {obj}",
    "per:charges": "{subj} is convicted of {obj}",
    "org:dissolved": "{subj} dissolved in {obj}",
    "org:stateorprovince_of_headquarters": "{subj} has a headquarter in the state or province {obj}",
    "per:country_of_birth": "{subj} was born in the country {obj}",
    "per:siblings": "{subj} is the siblings of {obj}",
    "org:top_members/employees": "{subj} has the high level member {obj}",
    "per:cause_of_death": "{subj} died because of {obj}",
    "per:alternate_names": "{subj} has the alternate name {obj}",
    "org:number_of_employees/members": "{subj} has the number of employees {obj}",
    "per:cities_of_residence": "{subj} lives in the city {obj}",
    "org:city_of_headquarters": "{subj} has a headquarter in the city {obj}",
    "per:children": "{subj} is the parent of {obj}",
    "per:employee_of": "{subj} is the employee of {obj}",
    "org:political/religious_affiliation": "{subj} has political affiliation with {obj}",
    "per:parents": "{subj} has the parent {obj}",
    "per:city_of_birth": "{subj} was born in the city {obj}",
    "per:age": "{subj} has the age {obj}",
    "per:countries_of_residence": "{subj} lives in the country {obj}",
    "org:alternate_names": "{subj} is also known as {obj}",
    "per:religion": "{subj} has the religion {obj}",
    "per:city_of_death": "{subj} died in the city {obj}",
    "per:country_of_death": "{subj} died in the country {obj}",
    "org:founded_by": "{subj} was founded by {obj}"
  },
  "retacred": {
    "no_relation": "{subj} has no known relations to {obj}",
    "per:religion": "{subj} has the religion {obj}",
    "org:country_of_branch": "{subj} has a branch in the country {obj}",
    "org:stateorprovince_of_branch": "{subj} has a branch in the state or province {obj}",
    "org:city_of_branch": "{subj} has a branch in the city {obj}",
    "org:shareholders": "{subj} has shares hold in {obj}",
    "org:top_members/employees": "{subj} has the high level member {obj}",
    "org:members": "{subj} has the member {obj}",
    "org:website": "{subj} has the website {obj}",
    "per:parents": "{subj} has the parent {obj}",
    "org:number_of_employees/members": "{subj} has the number of employees {obj}",
    "org:political/religious_affiliation": "{subj} has political affiliation with {obj}",
    "per:age": "{subj} has the age {obj}",
    "per:origin": "{subj} has the nationality {obj}",
    "org:alternate_names": "{subj} is also known as {obj}",
    "per:other_family": "{subj} is the other family member of {obj}",
    "per:identity": "{subj} is the identity of {obj}",
    "per:siblings": "{subj} is the siblings of {obj}",
    "org:member_of": "{subj} is the member of {obj}",
    "per:children": "{subj} is the parent of {obj}",
    "per:employee_of": "{subj} is the employee of {obj}",
    "per:spouse": "{subj} is the spouse of {obj}",
    "org:dissolved": "{subj} dissolved in {obj}",
    "per:schools_attended": "{subj} studied in {obj}",
    "per:country_of_death": "{subj} died in the country {obj}",
    "per:stateorprovince_of_death": "{subj} died in the state or province {obj}",
    "per:city_of_death": "{subj} died in the city {obj}",
    "per:date_of_death": "{subj} died in the date {obj}",
    "per:cause_of_death": "{subj} died because of {obj}",
    "org:founded": "{subj} was founded in {obj}",
    "org:founded_by": "{subj} was founded by {obj}",
    "per:countries_of_residence": "{subj} lives in the country {obj}",
    "per:stateorprovinces_of_residence": "{subj} lives in the state or province {obj}",
    "per:cities_of_residence": "{subj} lives in the city {obj}",
    "per:country_of_birth": "{subj} was born in the country {obj}",
    "per:stateorprovince_of_birth": "{subj} was born in the state or province {obj}",
    "per:city_of_birth": "{subj} was born in the city {obj}",
    "per:date_of_birth": "{subj} has birthday on {obj}",
    "per:charges": "{subj} is convicted of {obj}",
    "per:title": "{subj} is a {obj}"
  }
}